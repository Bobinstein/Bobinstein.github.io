(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{304:function(t,s,a){"use strict";a.r(s);var e=a(15),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"arweave-gateway"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arweave-gateway"}},[t._v("#")]),t._v(" arweave-gateway")]),t._v(" "),s("p",[t._v("The classic Arweave Gateway, deployable in AWS Cloud using Terraform")]),t._v(" "),s("p",[t._v("This solution is provided "),s("em",[t._v("as-is")]),t._v(" with limited support.")]),t._v(" "),s("p",[t._v("Have a question?  Join the AR.IO "),s("a",{attrs:{href:"https://discord.gg/6DHvefQNDx"}},[t._v("Discord")]),t._v(" and let us know!")]),t._v(" "),s("h2",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting started")]),t._v(" "),s("p",[t._v("Before starting with aws, make sure to have IAM user/role with which you can use to deploy the gateway resources.\nUse best practices in how you organize your organzational units, fitting to your needs.")]),t._v(" "),s("p",[t._v("We deploy terraform using "),s("em",[t._v("terragrunt")]),t._v(" but that is optional, we'll nontheless describe this process using terragrunt.")]),t._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# create a deployment target under environments\n# here we create the production target\nmkdir -p terraform/environments/prod\n")])])]),s("p",[t._v("Next create a new terraform file "),s("code",[t._v("terraform/environments/prod/main.tf")])]),t._v(" "),s("div",{staticClass:"language-tf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('terraform {\n  required_providers {\n    aws = {\n      source = "hashicorp/aws"\n      version = "~> 3.64.0"\n    }\n  }\n  backend "s3" {\n    bucket         = "terraform-deployment-bucket" # <- CHANGEME\n    key            = "terraform"\n    region         = "us-east-1" # <- CHANGEME IF NEEDED\n    dynamodb_table = "terraform-lock"\n    role_arn       = "arn:aws:iam::000000000000:role/DeploymentRole" # <- CHANGEME\n  }\n}\n\nresource "aws_s3_bucket" "bucket" {\n  bucket = "terraform-deployment-bucket" # <- CHANGEME\n}\n\nresource "aws_dynamodb_table" "terraform_state_lock" {\n  name           = "terraform-lock"\n  read_capacity  = 5\n  write_capacity = 5\n  hash_key       = "LockID"\n  attribute {\n    name = "LockID"\n    type = "S"\n  }\n}\n\n\nprovider "aws" {\n  region = "us-east-1" # <- CHANGEME IF NEEDED\n\n  assume_role {\n    role_arn = "arn:aws:iam::000000000000:role/DeploymentRole"\n  }\n}\n')])])]),s("p",[t._v("Next create a new terraform variables file in hcl format "),s("code",[t._v("terraform/environments/prod/terragrunt.hcl")])]),t._v(" "),s("div",{staticClass:"language-hcl extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hcl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" find_in_parent_folders()\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terraform")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../../src"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("inputs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("domain_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"domain.com"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("environment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prod"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("cidr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.80.0.0/16"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("region")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"us-east-1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("azs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"us-east-1a"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"us-east-1b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("private_subnets")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.80.1.0/24"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.80.3.0/24"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("public_subnets")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.80.0.0/24"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10.80.2.0/24"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("default_kms_id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00000000-0000-0000-0000-000000000000"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IAM")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("account_id")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"000000000000"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("deployment_role")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arn:aws:iam::000000000000:role/DeploymentRole"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Resouces")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("rds_instance_type")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"db.r5.large"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("ami_ubuntu_latest")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ami-09eaf2d6779f94558"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://cloud-images.ubuntu.com/locator/ec2/")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("ec2_import_blocks_resource")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t2.micro"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME IF NEEDED")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("import_blocks_ami")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ami-0000000000000000"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <- CHANGEME AFTER DEPLOYING AMI")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Next cd into "),s("code",[t._v("terraform/environments/prod")]),t._v(" and call the following")]),t._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# bootstraping terragrunt can be tedious\n# that's because many resources are expected to exist\n# prior to deploying specific resources\n# we recommend creating deployment s3 bucket and\n# dynamodb lock before proceeding\n\n$ terragrunt init\n\n# after success, keep applying more resources with\n\n$ terragrunt plan\n\n$ terragrunt apply\n")])])]),s("p",[s("em",[t._v("WARNING")]),t._v(" the terraform code will need to be modified to your infrastructure needs.\nYou'll also most defenitely need to comment out (or set count = 0) to parts which\nneed manual bootstraping.")]),t._v(" "),s("h2",{attrs:{id:"continuous-integration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#continuous-integration"}},[t._v("#")]),t._v(" Continuous Integration")]),t._v(" "),s("h1",{attrs:{id:"ec2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ec2"}},[t._v("#")]),t._v(" ec2")]),t._v(" "),s("p",[t._v("The import-blocks code is deployed to an ec2.\nThe the code is deployed using nix package manager, but\nthis can be changed to more traditional tools like yarn.\nIf you wish to go further with nix, please refer to")]),t._v(" "),s("p",[t._v("https://github.com/cachix/install-nix-action")]),t._v(" "),s("p",[t._v("where you can build nix code from github actions.")]),t._v(" "),s("p",[t._v("We use the following bash snippet in our github actions\nto push a newly built AMI image to aws.\nFeel free to use this ad verbatum, or use it as skeleton\nfor deploying in your CI deployment service.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("task_id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("aws ec2 import-snapshot "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--description")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Arweaeve Gateway import-blocks AMI Import"')]),t._v(" --disk-container "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{ '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("Description"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("v"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GITHUB_RUN_NUMBER")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", \\\n           "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("UserBucket"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":{ "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("S3Bucket"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("CHANGEME-MYS3BUCKET-amis"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", \\\n           "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("S3Key"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("import-blocks-x86_64-linux.vhd"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(' } }"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.ImportTaskId'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("aws ec2 describe-import-snapshot-tasks --import-task-ids $task_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n         jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.ImportSnapshotTasks[0].SnapshotTaskDetail.Status'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=~")]),t._v(" ^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pending"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("active"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("snapshot_id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("aws ec2 describe-import-snapshot-tasks --import-task-ids $task_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jq "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.ImportSnapshotTasks[0].SnapshotTaskDetail.SnapshotId'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" SNAPSHOTID "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$snapshot_id")]),t._v("\naws ec2 describe-import-snapshot-tasks\naws ec2 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),t._v(" snapshot-completed --snapshot-ids "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$snapshot_id")]),t._v("\naws ec2 register-image "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"import-blocks-'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GITHUB_RUN_NUMBER")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--description")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GITHUB_RUN_NUMBER")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--architecture")]),t._v(" x86_64 --root-device-name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/xvda"')]),t._v(" --virtualization-type hvm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --block-device-mappings "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[ \\\n   { \\\n     '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("DeviceName"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("/dev/xvda"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", \\\n     "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("Ebs"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(": {"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("SnapshotId"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$snapshot_id")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("VolumeSize"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":100,"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("DeleteOnTermination"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":true,"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("VolumeType"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(":"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("gp3"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("Iops"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(':300} \\\n   } \\\n]"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);